<?php
/**
 * Created by PhpStorm.
 * User: jonaskortum
 * Date: 08.03.17
 * Time: 16:43
 */

function add_to_wunderlist_menu()
{
    $items['add_to_wunderlist/%/%'] = array(
        'title' => 'Rezeptsuche',
        'access callback' => true,
        'page callback' => 'drupal_get_form',
        'page arguments' => array('add_to_wunderlist_add_form'),
    );

    $items['wunderlist_ajax/%'] = array(
        'title' => 'Get methods for Phase',
        'page callback' => 'add_to_wunderlist',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    return $items;
}

function add_to_wunderlist() {

}

/*
 * Diese Funktion erstellt ein Formular, welches alle relevanten Zutaten auflistet
 */
function add_to_wunderlist_add_form()
{

    //ID des Rezepts
    $recipe_id = arg(1);

    //Anzahl Portionen/Personen
    $quantity = arg(2);

    //Anzahl Einheiten einer Zutat
    $ingredient_quantity = 0;

    //Einheit einer Zutat
    $unit = "";

    //Das entsprechende Rezept wird geladen
    $recipe_result = db_query("SELECT * FROM {recipe} WHERE nid = :nid", array(
        ':nid' => $recipe_id
    ));


    foreach ($recipe_result as $recipe) {
        $ingredient_quantity = $recipe->yield;
        $unit = $recipe->yield_unit;
    }

    //Zutaten werden in eine Arraylist geschrieben
    $ingredient_array = add_to_wunderlist_get_ingredients($recipe_id, $ingredient_quantity, $quantity);

    $form['name'] = array(
        '#type' => 'fieldset',
    );

    $form['name']['quantity'] = array(
        '#type' => 'textfield',
        '#attributes' => array(
            'data-type' => 'number',
        ),
        '#size' => 2,
        '#maxlength' => 2,
        '#disabled' => true,
        '#default_value' => $quantity,
        '#field_suffix' => $unit
    );

    $form['name']['add_button2'] = array (
        '#type' => 'button',
        '#attributes' => array('onclick' => 'searchsomething2('.$quantity.'); return false;'),
        '#value' => t("weniger"),
    );

    $form['name']['add_button1'] = array (
        '#type' => 'button',
        '#attributes' => array('onclick' => 'searchsomething('.$quantity.'); return false;'),
        '#value' => t("mehr"),
    );





    $form['name']['ios'] = array(
        '#title' => t(''),
        '#type' => 'checkboxes',
        '#description' => t(''),
        '#options' => $ingredient_array,

    );

    $form['name']['submit'] = array(
        '#type' => 'submit',
        '#value' => 'zur Wunderlist hinzufügen',
        '#submit' => array('add_to_wunderlist_form_submit')
    );




    return $form;

}

function add_to_wunderlist_get_ingredients($recipe_id, $number, $quantity)
{
    //Array, in das später die Zutaten gespeichert werden
    $ingredient_array = array();

    //Recipe-Node wird geladen
    $recipe_node = node_load($recipe_id);

    //Roh-Daten der Zutaten werden geladen
    $raw_ingredient_array = $recipe_node->recipe_ingredients['ing'];

    $counter = 0;

    //Es wird über alle Zutaten iteriert
    foreach ($raw_ingredient_array as $ingredient) {
        $ingredient_string = '';

        //Sollte bei der Zutat keine Anzahl vorhanden sein...
        if ($ingredient['quantity'] == 0) {

            //Sollte keine Einheit vorhanden sein
            if (!strcmp($ingredient['unit_key'], "0")) {
                $ingredient_string .= $ingredient['name'];
            } else {
                $ingredient_string .= $ingredient['unit_key'] . " " . $ingredient['name'];
            }
        } else {
            $ingredient['quantity'] = $ingredient['quantity'] / $number * $quantity;
            $ingredient['quantity'] = round($ingredient['quantity'], 2);

            if (!strcmp($ingredient['unit_key'], "0")) {
                $ingredient_string .= $ingredient['quantity'] . " " . $ingredient['name'];
            } else {
                $ingredient_string .= $ingredient['quantity'] . " " . $ingredient['unit_key'] . " " . $ingredient['name'];
            }
        }

        //Sollte eine zusätzliche Notiz vorhanden sein
        if (strlen($ingredient['note']) > 0) {
            $ingredient_string .= " (" . $ingredient['note'] . ")";
        }

        $ingredient_array["$counter"] = $ingredient_string;
        $counter++;
    }

    return $ingredient_array;
}

function add_to_wunderlist_reset()
{

    $recipe_id = arg(1);

    $number = 0;
    $einheit = "";

    $sql = "SELECT * FROM {recipe} WHERE nid = " . $recipe_id;
    $result = db_query($sql);
    foreach ($result as $item4) {
        $number = $item4->yield;
    }

    drupal_goto("add_to_wunderlist/" . $recipe_id . "/" . $number);
}

function add_to_wunderlist_change_quantity($form, &$form_state)
{
    $recipe_id = arg(1);
    $quantity = $form_state['values']['quantity'];
    drupal_goto("add_to_wunderlist/" . $recipe_id . "/" . $quantity);
}

function add_to_wunderlist_form_submit($form, &$form_state)
{
    $checked = array();
    foreach ($form_state['values']['ios'] as $key => $val) {
        array_push($checked, $val);

    }


    write_mail_to_wunderlist($checked);
}

/*
 * Diese Funktion erstellt eine Mail, die an die Wunderlist-App verschickt wird
 */
function write_mail_to_wunderlist($ingredients)
{

    foreach ($ingredients as $ingredient) {


        if (strcmp($ingredient, "0")) {

            $from = "info@rezeptobot.de";
            $to = "me@wunderlist.com";

            $subject = $ingredient;
            $body = "Test";

            $fake_module = 'foo'; // or whatever you want
            $fake_key = 'bar'; // or whatever you want

            $message = array(
                'id' => $fake_module . '_' . $fake_key,
                'from' => $from,
                'to' => $to,
                'subject' => $subject,
                'body' => $body,
                'headers' => array(
                    'Return-Path' => $from,
                    'MIME-Version' => '1.0',
                    'Content-Transfer-Encoding' => '8Bit',
                    'Content-Type' => 'text/plain; charset=UTF-8;',
                ),
            );

            $system = drupal_mail_system("newsletter", $fake_module, $fake_key);
            if ($system->mail($message)) {
                //drupal_set_message("Email wurde gesendet!");
            } else {
                drupal_set_message("Email wurde nicht gesendet!", "error");
            }
        }
    }
    drupal_set_message("Zutaten wurden der Wunderlist-Einkaufsliste hinzugefügt");

    $recipe_id = arg(1);
    drupal_goto("node/" . $recipe_id);

}

/*
 * Diese Funktion schickt eine Mail ab
 */
function add_to_wunderlist_mail($key, &$message, $params)
{
    switch ($key) {
        case 'newsletter':
            $headers = array(
                'MIME-Version' => '1.0',
                'Content-Type' => 'text/html; charset=UTF-8;',
                'Content-Transfer-Encoding' => '8Bit',
                'X-Mailer' => 'Drupal'
            );

            foreach ($headers as $key => $value) {
                $message['headers'][$key] = $value;
            }
            $message['subject'] = $params['subject'];
            $message['body'] = array(0 => t($params['body']));
            break;
    }
}