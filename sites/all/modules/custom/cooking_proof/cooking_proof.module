<?php
/**
 * Created by PhpStorm.
 * User: jonaskortum
 * Date: 23.01.17
 * Time: 18:06
 */

function cooking_proof_menu() {

    $items['vergangene_Gerichte'] = array(
        'title' => 'Rezeptübersicht',
        'page callback' => 'cooking_proof_get_cooking_history',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $items['entferne_rezepthistorie/%'] = array(
        'title' => 'Rezeptübersicht',
        'page callback' => 'cooking_proof_delete_from_history',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $items['recipe_add_to_history'] = array(
        'title' => 'Rezeptübersicht',
        'page callback' => 'cooking_proof_add_to_history',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $items['recipe_plan_recipe/%'] = array(
        'access callback' => true,
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('cooking_proof_plan_recipe_form'),
    );

    $items['recipe_plan_to_cooked/%'] = array(
        'access callback' => true,
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('cooking_proof_from_plan_to_cook'),
    );

    $items['recipe_plan_to_watchlist/%'] = array(
        'access callback' => true,
        'page callback' => 'drupal_get_form',
        'access callback' => 'user_is_logged_in',
        'page arguments' => array('cooking_proof_from_plan_to_watchlist'),
    );

    return $items;
}

function cooking_proof_plan_recipe_form() {
    $dateformat = 'Y-m-d H:i';
    $label = t('Geplanter Kochzeitpunkt:');
    $timestamp = time();
    $dbv = $timestamp;
    if (empty($dbv)) {
        $d = new DateTime('@'.$dbv);
        $value = $d->format($dateformat);
    } else {
        $d = new DateTime();
        $value = $d->format($dateformat);
    }

    $form['test2']['start'] = array(
        '#type' => 'date_popup',
        '#date_timezone' => date_default_timezone(),
        '#date_format' => $dateformat,
        '#date_year_range' => '-3:+3',
        '#title' => $label,
        '#default_value' => $value,
    );

    $form['submit2'] = array(
        '#type' => 'submit',
        '#value' => 'Abbrechen',
        '#submit' => array('cooking_proof_back_to_watchlist')
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Speichern',
        '#submit' => array('cooking_proof_plan_recipe_from_watchlist')
    );

    return $form;

}

function cooking_proof_back_to_watchlist() {
    drupal_goto("merkliste");
}


function cooking_proof_plan_recipe_from_watchlist(&$form, &$form_state) {

    $date = $form_state['values']['start'];

    if(strlen($date)>0) {
        drupal_set_message($date);

        $recipe_id = arg(1);

        $node2 = node_load($recipe_id);

        global $user;

        db_insert('recipe_cooked')
            ->fields(array(
                'recipe_id' => $recipe_id,
                'date' => $date,
                'uid' => $user->uid,
            ))
            ->execute();


        $node = new stdClass();
        $node->type = 'rezepthistorie';
        node_object_prepare($node);

        $node->language = LANGUAGE_NONE;

        $node->title = $node2->title;

        $date = new DateTime($date);

        $date->sub(new DateInterval('PT1H'));
        $deadline2 = $date->format('Y-m-d H:i:s');

        $deadline2 = str_replace(" ", "T", $deadline2);

        $node->field_datum[$node->language][0]['value'] = $deadline2;
        $node->field_datum[$node->language][0]['timezone'] = "Europe/Berlin";
        $node->field_datum[$node->language][0]['timezone_db'] = "Europe/Berlin";

        $node->field_namenreferenz[$node->language][0]['value'] = $node2->title;
        $node->field_nutzerreferenz[$node->language][0]['value'] = $user->uid;

        $node->field_koch_check[$node->language][0]['value'] = 0;


        $node->field_referenz[$node->language][0]['value'] = $node2->nid;

        node_save($node);

        //Aus Merkliste löschen
        $sql = "DELETE FROM {recipe_watchlist} WHERE uid = ".$user->uid." AND recipe_id = ".$recipe_id;
        db_query($sql);
        drupal_set_message("Rezept wurde geplant und aus der Merkliste entfernt");
        drupal_goto("vergangene_Gerichte");



    } else {
        drupal_set_message("Bitte gültiges Datum angeben", "error");
    }

}

function cooking_proof_form_alter(&$form, &$form_state, $form_id) {
    if (!strcmp($form_id, 'rezepthistorie_node_form')) {
        $form['title']['#disabled'] = TRUE;
    }
}

function cooking_proof_delete_from_history() {
    node_delete(arg(1));

    drupal_set_message("Objekt wurde gelöscht");
    drupal_goto("vergangene_Gerichte");
}

function cooking_proof_add_to_history() {

    $recipe_id = arg(1);

    $node2 = node_load($recipe_id);

    global $user;

    $heute = date("Y-m-d H:i:s");

    db_insert('recipe_cooked')
        ->fields(array(
            'recipe_id' => $recipe_id,
            'date' => $heute,
            'uid' => $user->uid,
        ))
        ->execute();


    $node = new stdClass();
    $node->type = 'rezepthistorie';
    node_object_prepare($node);

    $node->language = LANGUAGE_NONE;

    $node->title = $node2->title;

    $date = new DateTime($heute);

    $date->sub(new DateInterval('PT1H'));
    $deadline2 = $date->format('Y-m-d H:i:s');

    $deadline2 = str_replace(" ", "T", $deadline2);

    $node->field_datum[$node->language][0]['value'] = $deadline2;
    $node->field_datum[$node->language][0]['timezone'] = "Europe/Berlin";
    $node->field_datum[$node->language][0]['timezone_db'] = "Europe/Berlin";

    $node->field_namenreferenz[$node->language][0]['value'] = $node2->title;
    $node->field_nutzerreferenz[$node->language][0]['value'] = $user->uid;

    $node->field_koch_check[$node->language][0]['value'] = 1;


    $node->field_referenz[$node->language][0]['value'] = $node2->nid;

    node_save($node);


    drupal_set_message("Rezept zur Historie hinzugefügt");
    drupal_goto("/node/".$recipe_id);

}


function cooking_proof_get_cooking_history() {


    global $user;
    global $base_url;

    $heute = date("Y-m-d 00:00:00");
    $heute = date('Y-m-d H:i:s', strtotime($heute . ' +1 day'));

    $sql = "SELECT * FROM {node} as node INNER JOIN {field_data_field_datum} as date on node.nid = date.entity_id INNER JOIN {field_data_field_koch_check} as koch On koch.entity_id =node.nid WHERE node.type = 'rezepthistorie' AND node.uid = ".$user->uid." AND field_datum_value <= '".$heute."' AND koch.field_koch_check_value = 1 ORDER BY field_datum_value";

    $tempString = '
    <style>
.city {
 float: left;
 margin: 5px;
 max-width: 300px;
 width: 180px;
 height: 180px;
 padding: 3px;
 font-size: 0.7em;
}

.img {
    width:  200px;
    height: 150px;
}
</style>
';


    $tempString .= "<h1>vergangene Gerichte</h1>";
    $tempString .= "<table><th width=\"22%\">Nr.</th><th>Rezeptname</th> <th> Datum</th><th>Aktionen</th>";
    $recipe_id = 0;

    $result = db_query($sql);
    foreach ($result as $item) {
        $path2 = "http://www.gemaa-tempelsee.info/wp-content/uploads/2017/01/kein-bild-vorhanden.gif";

        $sql = "SELECT * FROM {field_data_field_referenz} WHERE entity_id = ".$item->nid;
        $result = db_query($sql);
        foreach ($result as $item2) {
            $recipe_id = $item2->field_referenz_value;
        }


        $sql = "SELECT * FROM {field_data_field_recipe_image} WHERE entity_id = ".$recipe_id;
        $result = db_query($sql);
        foreach ($result as $item3) {
            $sql2 = "SELECT * FROM {file_managed} WHERE fid = ".$item3->field_recipe_image_fid;
            $result2 = db_query($sql2);
            foreach ($result2 as $item2) {
                $path2 = $item2->uri;
                $path2 = substr($path2, 8);
                $path2 = $base_url."/sites/default/files/".$path2;
            }
        }

        $phpdate = strtotime( $item->field_datum_value);
        $mysqldate = date( 'd.m.Y', $phpdate );

        $tempString .= "<tr><td><img class = \"img \"src=\"".$path2."\" border=\"4\" alt=\"Rose 1\"></td><td><a href='".$base_url."/node/".$recipe_id."'>".$item->title."</a></td><td>".$mysqldate."</td><td><ul><li><a href='".$base_url."/node/".$item->nid."/edit'>bearbeiten</a></li><li><a href='".$base_url."/entferne_rezepthistorie/".$item->nid."'>entfernen</a></li></ul></td></tr>";
    }
    
    $tempString .= "</table><br>";


    $tempString .= "<h1>geplante Gerichte</h1>";
    $tempString .= "<table><th width=\"22%\">Nr.</th><th>Rezeptname</th> <th> Datum</th><th>Aktionen</th>";

    $heute = date("Y-m-d 00:00:00");
    $heute = date('Y-m-d H:i:s', strtotime($heute . ' -1 day'));

    $sql = "SELECT * FROM {node} as node INNER JOIN {field_data_field_datum} as date on node.nid = date.entity_id INNER JOIN {field_data_field_koch_check} as koch On koch.entity_id =node.nid WHERE node.type = 'rezepthistorie' AND node.uid = ".$user->uid." AND koch.field_koch_check_value = 0 ORDER BY field_datum_value";
    $result = db_query($sql);

    foreach ($result as $item4) {
        $phpdate = strtotime( $item4->field_datum_value);
        $mysqldate = date( 'd.m.Y', $phpdate );

        $sql = "SELECT * FROM {field_data_field_referenz} WHERE entity_id = ".$item4->nid;
        $result = db_query($sql);
        foreach ($result as $item2) {
            $recipe_id = $item2->field_referenz_value;
        }


        $sql = "SELECT * FROM {field_data_field_recipe_image} WHERE entity_id = ".$recipe_id;
        $result = db_query($sql);
        foreach ($result as $item3) {
            $sql2 = "SELECT * FROM {file_managed} WHERE fid = ".$item3->field_recipe_image_fid;
            $result2 = db_query($sql2);
            foreach ($result2 as $item2) {
                $path2 = $item2->uri;
                $path2 = substr($path2, 8);
                $path2 = $base_url."/sites/default/files/".$path2;
            }
        }

        $tempString .= "<tr><td><img class = \"img \"src=\"".$path2."\" border=\"4\" alt=\"Rose 1\"></td><td><a href='".$base_url."/node/".$recipe_id."'>".$item4->title."</a></td><td>".$mysqldate."</td><td><ul><li><a href='".$base_url."/node/".$item4->nid."/edit'>bearbeiten</a></li><li><a href='".$base_url."/entferne_rezepthistorie/".$item4->nid."'>entfernen</a></li>";


        $phpdate = strtotime( $item4->field_datum_value);

        $heute = date("Y-m-d");


        $mysqldate = date( 'Y-m-d', $phpdate );

        $dateTimestamp1 = strtotime($mysqldate);
        $dateTimestamp2 = strtotime($heute);

        if($dateTimestamp1 <= $dateTimestamp2) {
            $tempString .= "<li><a href='".$base_url."/recipe_plan_to_cooked/".$item4->nid."/edit'>gekocht</a></li><li><a href='".$base_url."/recipe_plan_to_watchlist/".$item4->nid."/edit'>nicht gekocht</a></li>";
        } 

        $tempString .= "</ul></td></tr>";
    }



    $tempString .= "</table>";




    return $tempString;
}

function cooking_proof_get_recipe_name_from_id($recipe_id) {
    $recipe = "";
    $sql = "SELECT * FROM {recipe} WHERE recipe_id = " . $recipe_id;
    $result = db_query($sql);

    foreach ($result as $item) {
        $recipe = $item;
    }

    return $recipe;
}

function cooking_proof_from_plan_to_cook() {
    $recipe_id = arg(1);

    $sql = "UPDATE {field_data_field_koch_check} SET field_koch_check_value = 1 WHERE entity_id = ".$recipe_id;
    db_query($sql);

    drupal_set_message("Das Rezept wurde der Rezepthistorie hinzugefügt");
    drupal_goto("/vergangene_gerichte");
}

function cooking_proof_from_plan_to_watchlist() {
    $recipe_id = arg(1);
    global $user;

    $recipe_reference = 0;

    $sql = "SELECT * FROM {node} as node INNER JOIN {field_data_field_referenz} as ref on node.nid = ref.entity_id WHERE node.nid = ".$recipe_id;
    $result = db_query($sql);
    foreach ($result as $item) {
        $recipe_reference = $item->field_referenz_value;
        node_delete($item->nid);
    }

    $sql = "INSERT INTO {recipe_watchlist} (uid, recipe_id) VALUES (".$user->uid.",".$recipe_reference.")";
    db_query($sql);

    drupal_set_message("Das Rezept wurde der Rezepthistorie hinzugefügt");
    drupal_goto("/vergangene_gerichte");
}


